# See: https://circleci.com/blog/deploying-documentation-to-github-pages-with-continuous-integration/
version: 2.1

jobs:
  docs-build:
    docker:
      - image: circleci/python:3.8.1-buster
    environment:
      - CODECOV_TOKEN: "cb142a98-9da3-4fc9-b6b5-ed62b9809d16"
      - OMP_NUM_THREADS: 2
      - MKL_NUM_THREADS: 2
      - MINICONDA_PATH: ~/miniconda
      - CONDA_ENV_NAME: testenv
      - PYTHON_VERSION: 3.5
      - NUMPY_VERSION: 1.11.0
      - SCIPY_VERSION: 0.17.0
      - MATPLOTLIB_VERSION: 1.5.1
      - CYTHON_VERSION: 0.28.5
      - SCIKIT_IMAGE_VERSION: 0.12.3
    steps:
      - checkout

      # make sure pandoc is on the system
      - run: sudo apt-get update && sudo apt-get install -y pandoc

      - restore_cache:
          keys:
            - doc-min-deps-ccache-{{ .Branch }}
            - doc-min-deps-ccache
            
      - run: ./build_tools/circle/build_doc.sh
      - save_cache:
          key: doc-min-deps-ccache-{{ .Branch }}-{{ .BuildNum }}
          paths:
            - ~/.ccache
            - ~/.cache/pip

      - run:
          name: Setup Python environment via Pipenv
          command: |
            sudo pip install --upgrade pip
            sudo pip install pipenv
            pipenv install --skip-lock --dev
            pipenv run make build-dev

      - run:
          name: Run unit and integration tests
          command: |
            pipenv run make pep
            pipenv run pytest --cov=oblique_forests ./tests/ --cov-report=xml --cov-config=setup.cfg --verbose

      - store_artifacts:
          path: ./coverage.xml

      - run:
          name: Upload codecov report
          command: |
            bash <(curl -s https://codecov.io/bash)

      # - run:
      #     name: Build the documentation
      #     command: |
      #       pipenv run make build-doc

      # - persist_to_workspace:
      #     root: docs/_build
      #     paths: html

      # - store_artifacts:
      #     path: docs/_build/html/
      #     destination: dev
#      - run:
#          name: Check links
#          command: |
#            pipenv run make -C doc clean
#            pipenv run make -C docs linkcheck
#            pipenv run make -C doc linkcheck-grep

      - save_cache:
          key: pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "~/.local/share/virtualenvs/venv"

workflows:
  commit:
    jobs:
      - docs-build